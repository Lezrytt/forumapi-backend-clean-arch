# daemon off;
# # Heroku dynos have at least 4 cores.
# worker_processes <%= ENV['NGINX_WORKERS'] || 4 %>;

# events {
# 	use epoll;
# 	accept_mutex on;
# 	worker_connections <%= ENV['NGINX_WORKER_CONNECTIONS'] || 1024 %>;
# }

# http {
# 	gzip on;
# 	gzip_comp_level 2;
# 	gzip_min_length 512;
# 	gzip_proxied any; # Heroku router sends Via header

# 	server_tokens off;

# 	log_format l2met 'measure#nginx.service=$request_time request_id=$http_x_request_id';
# 	access_log <%= ENV['NGINX_ACCESS_LOG_PATH'] || 'logs/nginx/access.log' %> l2met;
# 	error_log <%= ENV['NGINX_ERROR_LOG_PATH'] || 'logs/nginx/error.log' %>;

# 	include mime.types;
# 	default_type application/octet-stream;
# 	sendfile on;

# 	# Must read the body in 5 seconds.
# 	client_body_timeout 5;

# 	upstream app_server {
# 		server unix:/tmp/nginx.socket fail_timeout=0;
# 	}

# 	limit_req_zone $binary_remote_addr zone=one:10m rate=1r/m;
# 	server {
# 		listen <%= ENV["PORT"] %>;
# 		server_name _;
# 		keepalive_timeout 5;

# 		location / {
# 			# Uncomment this if statement to force SSL/redirect http -> https
# 			# if ($http_x_forwarded_proto != "https") {
# 			#   return 301 https://$host$request_uri;
# 			# }

# 			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
# 			proxy_set_header Host nginx-forumapi.herokuapp.com;
# 			proxy_redirect off;
# 			proxy_pass http://app_server;
# 			limit_req zone=one;
# 		}
# 	}
# }
daemon off;
# Heroku dynos have at least 4 cores
worker_processes <%= ENV['NGINX_WORKERS'] || 4 %>;

events {
  use epoll;
  accept_mutex on;
  worker_connections <%= ENV['NGINX_WORKER_CONNECTIONS'] || 1024 %>;
}

http {
  gzip on;
  gzip_comp_level 2;
  gzip_min_length 512;

  server_tokens off;
  
  log_format main '$time_iso8601 - $status $request - client IP: $http_x_forwarded_for - <%= ENV['DYNO'] %> to $upstream_addr - upstream status: $upstream_status, upstream_response_time $upstream_response_time, request_time $request_time';
  access_log /dev/stdout main;
  error_log /dev/stdout notice;
  log_not_found on;

  include mime.types;
  default_type application/octet-stream;
  sendfile on;

  # Must read the body in 5 seconds.
  client_body_timeout <%= ENV['NGINX_CLIENT_BODY_TIMEOUT'] || 5 %>;

  upstream upstream_production {
    server powerful-eyrie-70963.herokuapp.com;
  }

  limit_req_zone $binary_remote_addr zone=one:10m rate=90r/m;
  server {
    listen <%= ENV["PORT"] %>;
    server_name _;
    set $upstream upstream_production;
    proxy_set_header x-forwarded-host $host;
    proxy_set_header Host powerful-eyrie-70963.herokuapp.com;

    location / {
      proxy_pass http://$upstream;
    }

    location /threads {
      # set $upstream upstream_production;
      proxy_pass http://$upstream;
      limit_req zone=one;
    }

  }
}